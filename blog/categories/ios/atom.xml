<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类: iOS | Wensj's Blog]]></title>
  <link href="http://wwwensj.github.com/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://wwwensj.github.com/"/>
  <updated>2015-05-22T12:38:49+08:00</updated>
  <id>http://wwwensj.github.com/</id>
  <author>
    <name><![CDATA[Wensj]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS常用开源库]]></title>
    <link href="http://wwwensj.github.com/blog/2015/05/21/ioschang-yong-kai-yuan-ku/"/>
    <updated>2015-05-21T10:44:02+08:00</updated>
    <id>http://wwwensj.github.com/blog/2015/05/21/ioschang-yong-kai-yuan-ku</id>
    <content type="html"><![CDATA[<p>这里记录的都是一些比较好的 <code>iOS</code> 开源库，涉及各个方面的内容，感觉这些开源的作者。此文章将<strong>持续更新</strong></p>

<h1>网络请求</h1>

<p>1、<strong><a href="https://github.com/AFNetworking/AFNetworking">AFNetworking</a></strong> 网络请求的封装，相信不用多说，开发过<code>iOS</code>的都应该会知道；</p>

<p>2、<strong><a href="https://github.com/yuantiku/YTKNetwork">YTKNetwork</a></strong> <code>iOS</code>大牛唐巧出口，官方介绍:YTKNetwork 是猿题库 iOS 研发团队基于 AFNetworking 封装的 iOS 网络库，其实现了一套 High Level 的 API，提供了更高层次的网络访问抽象；</p>

<h1>效果类</h1>

<p>1、<strong><a href="https://github.com/SeniorZhai/ScoreBoard">ScoreBoard</a></strong> 数字滚动变化，圆形进度条；</p>

<p>2、<strong><a href="https://github.com/mikeMTOL/UIBarButtonItem-Badge">UIBarButtonItem-Badge</a></strong> <code>UIBarButtonItem</code> 和 <code>UIButton</code> 添加气泡显示；</p>

<p>3、<strong><a href="https://github.com/ChrisXu1221/CXPhotoBrowser">CXPhotoBrowser</a></strong> 一个图片浏览的库；</p>

<p>4、<strong><a href="https://github.com/azxfire/MJPhotoBrowser">MJPhotoBrowser</a></strong> 一个图片浏览的库；</p>

<p>5、<strong><a href="https://github.com/mwaterfall/MWPhotoBrowser">MWPhotoBrowser</a></strong> 一个图片浏览的库；</p>

<h1>UITableView</h1>

<p>1、<strong><a href="https://github.com/forkingdog/UITableView-FDTemplateLayoutCell">UITableView-FDTemplateLayoutCell</a></strong> 优化UITableViewCell高度计算，以比较简单的方式，支持<code>iOS6.0+</code>,并且性能得到不少的提升，需要了解原理可看这篇<a href="http://blog.sunnyxx.com/2015/05/17/cell-height-calculation/">博文</a></p>

<h1>图片加载</h1>

<p>1、<strong><a href="https://github.com/rs/SDWebImage">SDWebImage</a></strong> 这个相信也不用多说，图片网络请求封装，之前也有相关文章与其它库进行对比，性能不错；</p>

<h1>开发工具、脚本</h1>

<p>1、<strong><a href="https://github.com/krzysztofzablocki/KZBootstrap">KZBootstrap</a></strong> 一个<code>iOS</code>项目引导程序；</p>

<p>2、<strong><a href="https://github.com/kejinlu/capimage">capimage</a></strong>一个使用python的PIL库写的脚本，用于将一个普通的图片去除重复部分生成一个可伸缩的图片（resizable image），这样使得图片资源的使用更加灵活和节省空间；</p>

<h1>账号接入</h1>

<p>1、<strong><a href="https://github.com/nst/STTwitter">STTwitter</a></strong> 一个封装了Twitter官方REST Api的库，目前Twitter官方本身也有自身的<code>iOS SDK</code>,通过<code>Fabric</code>客户端可以进行配置安装；</p>

<h1>支付接入</h1>

<p>1、<strong><a href="https://github.com/paypal/PayPal-iOS-SDK">PayPal-iOS-SDK</a></strong> <code>PayPal-iOS-SDK</code>接入的官方示例；</p>

<h1>扩展</h1>

<p>1、<strong><a href="https://github.com/uacaps/NSObject-ObjectMap">NSObject-ObjectMap</a></strong> 是一个能将<code>JSON</code>或<code>XML</code>等格式的数据直接转换成想要的对象;</p>

<h1>完整项目</h1>

<p>1、<strong><a href="https://coding.net/u/coding/p/Coding-iOS/git">Coding-iOS</a></strong> 一个完整的<code>iOS</code>客户端源码，更新频繁，涉及的东西比较多，值得学习；</p>

<h1>问题类</h1>

<p>1、<strong><a href="https://github.com/Xummer/ColorDifferenceDemo">ColorDifferenceDemo</a></strong> Xcode自带取色器与<code>UIColor</code>有色差的解决办法；</p>

<h1>其它</h1>

<p>1、<strong><a href="https://github.com/jyr/MNPP">MNPP</a></strong> 一键安装一个高性能的<code>Web Server</code>,<code>MNPP</code>是Mac + Nginx + Percona + PHP 的组合简称；</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[更方便地删除所有的subView]]></title>
    <link href="http://wwwensj.github.com/blog/2014/05/11/geng-fang-bian-di-shan-chu-suo-you-de-subview/"/>
    <updated>2014-05-11T23:15:17+08:00</updated>
    <id>http://wwwensj.github.com/blog/2014/05/11/geng-fang-bian-di-shan-chu-suo-you-de-subview</id>
    <content type="html"><![CDATA[<hr />

<p>参考出处：<a href="http://stackoverflow.com/questions/2156015/remove-all-subviews">http://stackoverflow.com/questions/2156015/remove-all-subviews</a></p>

<hr />

<h3>常用做法</h3>

<p>通常我们移除一个<code>View</code>中的所有subView，都会使用遍历的方式去移除，代码如下：
```objective-c</p>

<pre><code>UIView *view = [[UIView alloc] initWithFrame:CGRectZero];
UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];
[view addSubview:button];
UIImageView *imageview = [[UIImageView alloc] initWithFrame:CGRectZero];
[view addSubview:imageview];
NSLog(@"subview count is %ld", view.subviews.count);//输出2
for (id subview in view.subviews) {
    [subview removeFromSuperview];
}
NSLog(@"subview count is %ld", view.subviews.count);//输出0
</code></pre>

<p>```</p>

<h3>更方便的做法</h3>

<p>在<code>iOS</code>上的写法是：
```objective-c</p>

<pre><code>UIView *view = [[UIView alloc] initWithFrame:CGRectZero];
UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];
[view addSubview:button];
UIImageView *imageview = [[UIImageView alloc] initWithFrame:CGRectZero];
[view addSubview:imageview];
NSLog(@"subview count is %ld", view.subviews.count);//输出2
// 使用makeObjectPerformSelector
[[view subviews] makeObjectsPerformSelector:@selector(removeFromSuperview)];
NSLog(@"subview count is %ld", view.subviews.count);//输出0
</code></pre>

<p>```</p>

<p>在<code>Mac</code>上的做法是：
```objective-c
[someNSView setSubviews:[NSArray array]];</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
