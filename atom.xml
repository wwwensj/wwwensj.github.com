<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Wensj's Blog]]></title>
  <link href="http://wwwensj.github.com/atom.xml" rel="self"/>
  <link href="http://wwwensj.github.com/"/>
  <updated>2014-10-22T16:41:48+08:00</updated>
  <id>http://wwwensj.github.com/</id>
  <author>
    <name><![CDATA[Wensj]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[常用的 ADB 命令]]></title>
    <link href="http://wwwensj.github.com/blog/2014/05/21/chang-yong-de-adb-ming-ling/"/>
    <updated>2014-05-21T23:46:05+08:00</updated>
    <id>http://wwwensj.github.com/blog/2014/05/21/chang-yong-de-adb-ming-ling</id>
    <content type="html"><![CDATA[<p>最近在搞 Andorid 开发，在调用的过程中，经常会用到 <code>ADB</code>，这里简单做个此命令使用频率较高的用法。</p>

<p><code>ADB</code> 全称是 <strong>Android Debug Bridge</strong>, 是 Android SDK 里的一个工具, 用它可以直接操作管理 Android 模拟器或者 Andriod 设备。</p>

<p>它的主要功能有:</p>

<blockquote><ul>
<li>运行设备的 shell 命令行</li>
<li>管理模拟器或设备的端口映射</li>
<li>计算机和设备之间上传/下载文件</li>
<li>将本地 apk 软件安装至模拟器或 Android 设备</li>
</ul>
</blockquote>

<hr />

<h2>常用的 ADB 命令</h2>

<ul>
<li><p>1、<strong>adb help</strong> 显示帮助信息</p></li>
<li><p>2、<strong>adb version</strong> 显示 ADB 命令版本号</p></li>
<li><p>3、<strong>adb devices</strong> 查看当前连接的设备,包括真机和模拟器</p></li>
<li><p>4、<strong>adb start-server</strong> 启动计算机 adb 服务进程，也可使用 adb devices 命令时自动开启</p></li>
<li><p>5、<strong>adb kill-server</strong> 关闭计算机 adb 服务进程，有时在正在使用的 adb，然后想删除 adb，那这时你得先关闭进程才了删除，就要用到它了</p></li>
<li><p>6、<strong>adb install [-r] [-s]</strong> 安装软件</p>

<p> <strong>－r</strong>强制安装（在某些情况下可以已有些应用程序在运行或不可写，可加上此参数强制安装）</p>

<p> <strong>－s</strong> 将 apk 文件安装在 SD-Card</p></li>
<li><p>7、<strong>adb uninstall [-k] &lt;软件名></strong> 卸载软件， -k 参数表示为卸载软件但是保留配置和缓存文件</p></li>
<li><p>8、<strong>adb push &lt;本地路径> &lt;远程路径></strong> 从电脑上发送文件到设备</p>

<p> 例：adb push recovery.img /sdcard/recovery.img，将本地目录中的 recovery.img 文件传送手机的 SD 卡中并取同样的文件名</p></li>
<li><p>9、<strong>adb pull &lt;远程路径> &lt;本地路径></strong> 从设备上下载文件到电脑</p></li>
<li><p>10、<strong>adb reboot [bootloader|recovery]</strong> 重启设备</p>

<p> 1）<strong>adb reboot</strong> 直接重启设备回到使用界面 ；</p>

<p> 2）<strong>adb reboot-bootloader</strong> 或 <strong>adb reboot bootloader</strong> 重启设备到 bootloader 引导模式：</p>

<p> 3）<strong>adb reboot recovery</strong>，重启到 <strong>recovery</strong> 刷机模式</p></li>
<li><p>11、<strong>adb get-state</strong> 返回设备状态，有三种结果：关机，引导模式，设备在线</p></li>
<li><p>12、<strong>adb get-serialno</strong> 返回设备序列号SN值</p></li>
<li><p>13、<strong>adb remount</strong> 获取设备的 ROOT 权限</p>

<p> 通过这个命令就可以获取设备的 ROOT 权限一样的通 adb 操作 /system 等目录的，如 adb push xx.app /system/app 即可将 app 应用直接放入系统目录，这个操作必须设备已解锁并 ROOT 过。</p></li>
<li><p>14、<strong>adb shell pm clear &lt;包名></strong> 清除应用数据，跟在设备上打开设置&mdash;应用&mdash;清除数据 是一样的效果。</p></li>
</ul>


<hr />

<p><a href="http://www.izhangheng.com/android-debug-bridge">文章参考: http://www.izhangheng.com/android-debug-bridge</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Unicode 的换行符号 e280a8 导致 JS 报错]]></title>
    <link href="http://wwwensj.github.com/blog/2014/05/14/unicode-de-huan-xing-fu-hao-e280a8-dao-zhi-js-bao-cuo/"/>
    <updated>2014-05-14T21:52:40+08:00</updated>
    <id>http://wwwensj.github.com/blog/2014/05/14/unicode-de-huan-xing-fu-hao-e280a8-dao-zhi-js-bao-cuo</id>
    <content type="html"><![CDATA[<h3>出现的现象</h3>

<p>项目是使用 <a href="http://cordova.apache.org/">phoneGap（现称 Cordova ）</a> 框架，<code>JS</code> 端 从 <code>Navite</code> 端获取到处理数据后，其实是段可执行的 <code>JS</code> 代码，当要执行它时，报 <strong>“SyntaxError: Unexpected token ILLEGAL”</strong> 的错误，意思是不合法的记号，代码无法再执行下去，使用肉眼在 <code>Linux</code> 下看到是空白行，在 <code>Windows</code> 下看到的是一些特殊字符， <a href="http://cordova.apache.org/">phoneGap</a> 的关键代码为</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// 获取到 Navite 端的处理结果</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">msg</span> <span class="o">=</span> <span class="nx">prompt</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">,</span> <span class="s2">&quot;gap_poll:&quot;</span><span class="p">);</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nx">msg</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">try</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// 用 eval 执行它</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">t</span> <span class="o">=</span> <span class="nb">eval</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">msg</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span><span class="k">catch</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// catch 到错误是 SyntaxError: Unexpected token ILLEGAL</span>
</span><span class='line'>            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;JSCallbackPolling: Message from Server: &quot;</span> <span class="o">+</span> <span class="nx">msg</span><span class="p">);</span>
</span><span class='line'>            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;JSCallbackPolling Error: &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<h3>问题分析</h3>

<p>怀疑就是此特殊字符引起的 <code>JS</code> 语法错误，经服务器的同学查证，发现此字符的 <code>UTF-8</code> 的编码是 <code>e280a8</code>，这货是什么呢？ <code>Google</code> 后发现它的 <code>Unicode</code> 编码是 <code>\u2028</code>，正是 <code>Unicode</code> 下的换行符号。此符号对于 <code>JS</code> 下执行 <code>eval</code> 函数时出错，造成语法错误。由于出现此问题的是线上环境，当时服务器同学已经把数据库有问题的那个用户的字段给修改好了，因此我决定使用代码来模拟一下，模拟的思路是：</p>

<blockquote><ul>
<li>用 <code>Java</code> 来创建一个包含 <code>Unicode</code> 编码的换行符号 <code>\u2028</code> 的字符串；></li>
<li>再转成 <code>UTF-8</code> 编码的字符串；</li>
<li>回传给 <code>JS</code> 端</li>
</ul>
</blockquote>

<p>代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//Unicode编码的字符中，意义是”HelloWorld,*HelloWorld”,*代表\u2028,它代表Unicode下的换行符</span>
</span><span class='line'><span class="n">String</span> <span class="n">nicknameUnicode</span> <span class="o">=</span> <span class="s">&quot;\u0048\u0065\u006C\u006C\u006F World\u2028,\u0048\u0065\u006C\u006C\u006F World&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">String</span> <span class="n">nicknameUTF8</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'><span class="k">try</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">//转成utf-8,这里就包括Unicode的换行符号，返回给js会报错</span>
</span><span class='line'>    <span class="n">nicknameUTF8</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">nicknameUnicode</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(</span><span class="s">&quot;UTF-8&quot;</span><span class="o">),</span> <span class="s">&quot;UTF-8&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">UnsupportedEncodingException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 把这个 nicknameUTF-8传给JS端，代码非关键，就不贴了</span>
</span></code></pre></td></tr></table></div></figure>


<p>果然，<code>JS</code> 端同样报了 <strong>“SyntaxError: Unexpected token ILLEGAL”</strong> 的错误</p>

<h3>如何解决</h3>

<h4>方式一：Java端解决</h4>

<p>既然我们知道是 <code>Unicode</code> 的换行符号 <code>\u2028</code> 引起的，那就对症下药，把这个换行符号去掉就好了，因为项目用的是 <code>Java</code>，因此使用 <code>Java</code> 的方法去掉，其它语言应该也是一样的，只不过写法不同而已，发现这个换行符号用 <code>trim()</code> 方法是没法去除的，但可以用正则表达式去掉，代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>
</span><span class='line'><span class="c1">//正则替换换行符号，假如\u2028放在首尾，用trim()方法，也是替换不了的</span>
</span><span class='line'><span class="n">nicknameUTF8</span> <span class="o">=</span> <span class="n">nicknameUTF8</span><span class="o">.</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">&quot;\\s*&quot;</span><span class="o">,</span> <span class="s">&quot;&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>好了，一切正常了。</p>

<h4>方式二：JS 端解决</h4>

<p>当从 <code>prompt</code> 函数拿到处理结果后，判断一下，如果存在这样的字符，则把它替换为空，再去执行 <code>eval</code> 函数，代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// 获取到 Navite 端的处理结果</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">msg</span> <span class="o">=</span> <span class="nx">prompt</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">,</span> <span class="s2">&quot;gap_poll:&quot;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">lineBreakCharReg</span> <span class="o">=</span> <span class="sr">/\u2028|\u2029/g</span><span class="p">;</span>
</span><span class='line'><span class="c1">// 如果存在换行符号，则替换为空。</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nx">lineBreakCharReg</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">msg</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">msg</span> <span class="o">=</span> <span class="nx">msg</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">lineBreakCharReg</span><span class="p">,</span> <span class="s2">&quot;&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nx">msg</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">try</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// 用 eval 执行它</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">t</span> <span class="o">=</span> <span class="nb">eval</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">msg</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span><span class="k">catch</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// catch 到错误是 SyntaxError: Unexpected token ILLEGAL</span>
</span><span class='line'>            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;JSCallbackPolling: Message from Server: &quot;</span> <span class="o">+</span> <span class="nx">msg</span><span class="p">);</span>
</span><span class='line'>            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;JSCallbackPolling Error: &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<h3>小小总结</h3>

<blockquote><ul>
<li><code>JS</code> 从服务端或者客户端获取到结果时，特别要注意是否包括换行符号，包括 <code>Unicode</code> 和 <code>UTF-8</code> 等的编码的换行符号，因为会引起 <code>JS</code> 的语法问题；</li>
<li>那么其它的编码格式下的换行符号会不会也引起 <code>JS</code> 的语法问题呢？这里没有再进一步测试，有兴趣的可以试一下，告诉我，^_^；</li>
<li>正则 <code>\s</code> 可去掉 <code>Unicode</code> 和 <code>UTF-8</code> 的换行符号，其它的编码换行我猜也可以的。</li>
<li>后来经验证，\u2029也会导致这样的问题，这个是 <code>Unicode</code> 下的段换行符号。

<h3>参考的资料</h3></li>
</ul>
</blockquote>

<p><a href="http://stackoverflow.com/questions/10556875/list-of-unicode-characters-that-should-be-filtered-in-output">List of Unicode characters that should be filtered in output? &mdash;stackoverflow</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[更方便地删除所有的subView]]></title>
    <link href="http://wwwensj.github.com/blog/2014/05/11/geng-fang-bian-di-shan-chu-suo-you-de-subview/"/>
    <updated>2014-05-11T23:15:17+08:00</updated>
    <id>http://wwwensj.github.com/blog/2014/05/11/geng-fang-bian-di-shan-chu-suo-you-de-subview</id>
    <content type="html"><![CDATA[<hr />

<p>参考出处：<a href="http://stackoverflow.com/questions/2156015/remove-all-subviews">http://stackoverflow.com/questions/2156015/remove-all-subviews</a></p>

<hr />

<h3>常用做法</h3>

<p>通常我们移除一个<code>View</code>中的所有subView，都会使用遍历的方式去移除，代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">UIView</span> <span class="o">*</span><span class="n">view</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIView</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="n">CGRectZero</span><span class="p">];</span>
</span><span class='line'><span class="n">UIButton</span> <span class="o">*</span><span class="n">button</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIButton</span> <span class="nl">buttonWithType:</span><span class="n">UIButtonTypeCustom</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">button</span><span class="p">];</span>
</span><span class='line'><span class="n">UIImageView</span> <span class="o">*</span><span class="n">imageview</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIImageView</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="n">CGRectZero</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">imageview</span><span class="p">];</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;subview count is %ld&quot;</span><span class="p">,</span> <span class="n">view</span><span class="p">.</span><span class="n">subviews</span><span class="p">.</span><span class="n">count</span><span class="p">);</span><span class="c1">//输出2</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="kt">id</span> <span class="n">subview</span> <span class="k">in</span> <span class="n">view</span><span class="p">.</span><span class="n">subviews</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">subview</span> <span class="n">removeFromSuperview</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;subview count is %ld&quot;</span><span class="p">,</span> <span class="n">view</span><span class="p">.</span><span class="n">subviews</span><span class="p">.</span><span class="n">count</span><span class="p">);</span><span class="c1">//输出0</span>
</span></code></pre></td></tr></table></div></figure>


<h3>更方便的做法</h3>

<p>在<code>iOS</code>上的写法是：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">UIView</span> <span class="o">*</span><span class="n">view</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIView</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="n">CGRectZero</span><span class="p">];</span>
</span><span class='line'><span class="n">UIButton</span> <span class="o">*</span><span class="n">button</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIButton</span> <span class="nl">buttonWithType:</span><span class="n">UIButtonTypeCustom</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">button</span><span class="p">];</span>
</span><span class='line'><span class="n">UIImageView</span> <span class="o">*</span><span class="n">imageview</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIImageView</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="n">CGRectZero</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">imageview</span><span class="p">];</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;subview count is %ld&quot;</span><span class="p">,</span> <span class="n">view</span><span class="p">.</span><span class="n">subviews</span><span class="p">.</span><span class="n">count</span><span class="p">);</span><span class="c1">//输出2</span>
</span><span class='line'><span class="c1">// 使用makeObjectPerformSelector</span>
</span><span class='line'><span class="p">[[</span><span class="n">view</span> <span class="n">subviews</span><span class="p">]</span> <span class="nl">makeObjectsPerformSelector:</span><span class="k">@selector</span><span class="p">(</span><span class="n">removeFromSuperview</span><span class="p">)];</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;subview count is %ld&quot;</span><span class="p">,</span> <span class="n">view</span><span class="p">.</span><span class="n">subviews</span><span class="p">.</span><span class="n">count</span><span class="p">);</span><span class="c1">//输出0</span>
</span></code></pre></td></tr></table></div></figure>


<p>在<code>Mac</code>上的做法是：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">[</span><span class="n">someNSView</span> <span class="nl">setSubviews:</span><span class="p">[</span><span class="n">NSArray</span> <span class="n">array</span><span class="p">]];</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS 7模糊技巧]]></title>
    <link href="http://wwwensj.github.com/blog/2014/05/11/ios-7mo-hu-ji-qiao/"/>
    <updated>2014-05-11T21:05:22+08:00</updated>
    <id>http://wwwensj.github.com/blog/2014/05/11/ios-7mo-hu-ji-qiao</id>
    <content type="html"><![CDATA[<p>原文出处：<a href="http://damir.me/ios7-blurring-techniques">http://damir.me/ios7-blurring-techniques</a></p>

<hr />

<p>你可能想在iOS 7上实现模糊的view，那么应该要怎么做呢？</p>

<h2>静态模糊（blur）</h2>

<p>要知道这并不是一种新的技术。它在iOS7之前的版本就可以使用，但是有限制的。主要的做法就是获取一个<code>view</code>的快照（即做成一张图片），然后把图片模糊化。</p>

<p>在iOS 6下获取快照使用<code>renderInContext:</code>方法，但它耗时很长，幸运的是，在iOS 7下在<code>view</code>里新增加了一个叫<code>drawViewHierarchyInRect:afterScreenUpdates:</code>的方法，它获得的效果是一样的。它能很快地获取一个<code>view</code>的快照。有多快？这里和<code>renderInContext:</code>方法对比一下。</p>

<p><img src="http://f.cl.ly/items/323c000h013V2f3R2p3b/Screen%20Shot%202013-09-16%20at%2001.12.37%20.png" alt="comparison-image" /></p>

<p>它比<code>renderInContext:</code>方法快了15倍。现在我们能获得一个快照了，那我们怎么做才能获得模糊的效果呢？<code>Apple</code>公司也帮我们封装好了方法。你可以通过<code>Apple</code>公司创建好的<code>UIImageEffects</code>这个<code>category</code>来获得模糊的效果。（找到<code>Sample Code</code>><code>and search for ImageEffects</code>）</p>

<hr />

<h2>例子</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// YourUIView.m (UIView)</span>
</span><span class='line'><span class="cp">#import &quot;UIImage+ImageEffects.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="n">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nf">blurredSnapshot</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 创建图片的上下文</span>
</span><span class='line'>    <span class="n">UIGraphicsBeginImageContextWithOptions</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">,</span> <span class="n">NO</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="p">.</span><span class="n">screen</span><span class="p">.</span><span class="n">scale</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 这个就是新的 API</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">drawViewHierarchyInRect:</span><span class="n">self</span><span class="p">.</span><span class="n">frame</span> <span class="nl">afterScreenUpdates:</span><span class="n">NO</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 获取快照</span>
</span><span class='line'>    <span class="n">UIImage</span> <span class="o">*</span><span class="n">snapshotImage</span> <span class="o">=</span> <span class="n">UIGraphicsGetImageFromCurrentImageContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 使用Apple的 UIImageEffect category 把模糊效果应用到图片中</span>
</span><span class='line'>    <span class="n">UIImage</span> <span class="o">*</span><span class="n">blurredSnapshotImage</span> <span class="o">=</span> <span class="p">[</span><span class="n">snapshotImage</span> <span class="n">applyLightEffect</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 或者使用 &quot;UIImage+ImageEffects.h&quot; 中的其它效果</span>
</span><span class='line'>    <span class="c1">// UIImage *blurredSnapshotImage = [snapshotImage applyDarkEffect];</span>
</span><span class='line'>    <span class="c1">// UIImage *blurredSnapshotImage = [snapshotImage applyExtraLightEffect];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 清理一下</span>
</span><span class='line'>    <span class="n">UIGraphicsEndImageContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">blurredSnapshotImage</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>提示：Make it a <code>UIView</code> category if you plan to blur th <code>sh**</code> out of your application.（不懂sh**是什么，干脆直接上原话好了）</p>

<hr />

<h2>实时模糊（blur）</h2>

<p>你怎么才能做到像系统的控制中心或通知中心的那种实时模糊呢？<code>Apple</code>（经常但不总是）使用我们不能使用的自定义私有API来做的。</p>

<hr />

<h2>聪明的小技巧</h2>

<p><code>Andy Matuschak</code>指出，<code>Apple</code>是通过使用了一些小技巧，把静态的图片做到或者说是模拟到实时模糊的效果。这种小技巧的做法只是在旧的设备上(iPhone 5之前)使用的，在iPhone 5 上的模糊效果似乎是实时的，没有任何技巧。</p>

<p>然而，让我们拿通知中心（iOS 7上的）作为一个例子。他（<code>Andy Matuschak</code>）的意思是使用了技巧（我猜的），那就是获得了一个快照并从起点开始模糊它，并把它设置为通知中心的背景图。当用户拉下通知中心时，它通过增加背景图高度来模拟毛玻璃模糊效果。这给用户的印象就是实时的模糊效果。</p>

<hr />

<h2>UIToolbar</h2>

<p>最后同样重要的是，你可以更好地利用<code>UIToolbar</code> 这个类（而不是<code>UIView</code>）。确保你设置了<code>barStyle</code>属性为<code>UIBarStyleBlack</code>，<code>translucent</code>属性为<code>YES</code>。
你随意地调整<code>barTintColor</code>就行了！这样将会给你一个半透明实时模糊的view。</p>

<p>有没有一个更加优雅和简洁的解决办法呢？还真没有，<code>UIToolbar</code>只能当成一个toolbar使用。但是如果你真的想实时模糊<code>UIView</code>的而<code>Apple</code>又不提供这个API的话，它可能是唯一的方法了。它当然是不会被拒绝的。</p>
]]></content>
  </entry>
  
</feed>
